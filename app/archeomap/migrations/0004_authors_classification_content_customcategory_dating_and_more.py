# Generated by Django 5.0.4 on 2024-04-07 20:47

import archeomap.models.utils
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('archeomap', '0003_testcategory_testmodel_category'),
    ]

    operations = [
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=255, unique=True, verbose_name='Археолог')),
            ],
            options={
                'verbose_name': 'Список археологов',
                'verbose_name_plural': 'Cписок археологов',
            },
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification_category_value', models.CharField(choices=[('None', 'None'), ('Санитарные захоронения', 'Санитарные захоронения'), ('Исторические кладбища', 'Исторические кладбища'), ('Культовые сооружения (Храмы\\Церкви\\Часовни)', 'Культовые сооружения (Храмы\\Церкви\\Часовни)'), ('Случайные находки\\клады', 'Случайные находки\\клады'), ('Крепости\\укрепления\\фортификационные сооружения', 'Крепости\\укрепления\\фортификационные сооружения'), ('Жилые постройки', 'Жилые постройки'), ('Общественные постройки', 'Общественные постройки'), ('Административные постройки', 'Административные постройки'), ('Военные постройки', 'Военные постройки'), ('Промышленные постройки', 'Промышленные постройки'), ('Научные постройки', 'Научные постройки'), ('Тюремные постройки', 'Тюремные постройки'), ('Транспортные инфраструктура', 'Транспортные инфраструктура'), ('Дворцы', 'Дворцы'), ('Памятники доисторической эпохи (Неолит\\Бронзовый век', 'Памятники доисторической эпохи (Неолит\\Бронзовый век'), ('Памятники Железного века', 'Памятники Железного века'), ('Инженерно-технические сооружения', 'Инженерно-технические сооружения'), ('Подводные памятники', 'Подводные памятники'), ('Парки\\архитектура малых форм', 'Парки\\архитектура малых форм'), ('Средневековые памятники', 'Средневековые памятники'), ('Участок культурного слоя', 'Участок культурного слоя')], max_length=255, verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Классификация памятника',
                'verbose_name_plural': 'Классификация памятника',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Тектовое описание единицы контента')),
                ('link', models.URLField(max_length=255, unique=True, verbose_name='Ссылка на контент')),
            ],
            options={
                'verbose_name': 'Список аудио-видео контента для памятников',
                'verbose_name_plural': 'Список аудио-видео контента для памятников',
            },
        ),
        migrations.CreateModel(
            name='CustomCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_category_value', models.CharField(choices=[('NONE', 'NONE'), ('Памятники с обозначением на местности', 'Памятники с обозначением на местности'), ('Самые выдающиеся памятники: выбор редакции', 'Самые выдающиеся памятники: выбор редакции'), ('Памятники, напрямую связанные с историческими личностями', 'Памятники, напрямую связанные с историческими личностями')], max_length=255, verbose_name='Кастомная категория')),
            ],
            options={
                'verbose_name': 'Кастомная категория',
                'verbose_name_plural': 'Кастомная категория',
            },
        ),
        migrations.CreateModel(
            name='Dating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dating_value', models.CharField(choices=[('None', 'None'), ('VI тыс. до н.э ', 'VI тыс. до н.э '), ('II - нач. I тыс. до н.э', 'II - нач. I тыс. до н.э'), ('I тыс. до н.э - кон. I тыс. н.э', 'I тыс. до н.э - нач I тыс. н.э'), ('кон. I тыс. н.э - нач. XVII в.', 'кон. I тыс. н.э - нач. XVII в.'), ('1 пол. XVII в.', '1 пол. XVII в.'), ('2 пол. XVII в.', '2 пол. XVII в.'), ('1 пол. XVIII в.', '1 пол. XVIII в.'), ('2 пол. XVIII в.', '2 пол. XVIII в.'), ('1 пол. XIX в.', '1 пол. XIX в.'), ('2 пол. XIX в.', '2 пол. XIX в.'), ('1 чт. XX в.', '1 чт. XX в.')], max_length=255, verbose_name='Датировка памятника')),
            ],
            options={
                'verbose_name': 'Датировка памятника',
                'verbose_name_plural': 'Датировка памятника',
            },
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(blank=True, max_length=255, unique=True, verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Список организаций',
                'verbose_name_plural': 'Список организаций',
            },
        ),
        migrations.CreateModel(
            name='ResearchYears',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(unique=True, verbose_name='Год исследования')),
            ],
            options={
                'verbose_name': 'Года раскопок',
                'verbose_name_plural': 'Года раскопок',
            },
        ),
        migrations.CreateModel(
            name='Sources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Ссылка на источник')),
                ('link', models.URLField(blank=True, max_length=255, null=True, verbose_name='Ссылка на источник если есть')),
            ],
            options={
                'verbose_name': 'Список источников',
                'verbose_name_plural': 'Список источников',
            },
        ),
        migrations.CreateModel(
            name='Monuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Название памятника с идентификатором')),
                ('name', models.CharField(max_length=255, verbose_name='Название памятника (для пользователей)')),
                ('description', models.TextField(blank=True, default='Lorem ipsum', verbose_name='Краткое описание')),
                ('landmark', models.TextField(blank=True, default='Lorem ipsum', verbose_name='Что сейчас на месте памятника')),
                ('address', models.CharField(default='Lorem ipsum', max_length=255, verbose_name='Административный адрес')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('visible', models.BooleanField(default=True, verbose_name='Видимость записи')),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Широта')),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Долгота')),
                ('authors', models.ManyToManyField(blank=True, to='archeomap.authors')),
                ('classification_category', models.ManyToManyField(to='archeomap.classification')),
                ('content', models.ManyToManyField(to='archeomap.content')),
                ('custom_category', models.ManyToManyField(to='archeomap.customcategory')),
                ('dating', models.ManyToManyField(to='archeomap.dating')),
                ('organizations', models.ManyToManyField(blank=True, to='archeomap.organizations')),
                ('research_years', models.ManyToManyField(blank=True, to='archeomap.researchyears')),
                ('sources', models.ManyToManyField(to='archeomap.sources')),
            ],
            options={
                'verbose_name': 'Археологические памятники',
                'verbose_name_plural': 'Археологические памятники',
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=archeomap.models.utils.image_upload_to, verbose_name='Изображение')),
                ('description', models.TextField(default='Lorem ipsum', verbose_name='Подпись к картинке')),
                ('monument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='archeomap.monuments', to_field='title')),
            ],
            options={
                'verbose_name': 'Изображения для попапов',
                'verbose_name_plural': 'Изображения для попапов',
            },
        ),
    ]
