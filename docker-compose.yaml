services:

  database:
    image: postgres:alpine
    container_name: postgres
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"


  backend:
    container_name: backend
    build:
      context: .
    env_file:
      - app/.env/.env.local
    environment:
      - DB_HOST=database
      - DB_NAME=${DATABASE_NAME}
      - DB_USER=${DATABASE_USER}
      - DB_PASS=${DATABASE_PASSWORD}

    ports:
      - "8000:8000"

    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      database:
        condition: service_healthy
    # админ автоматически создается
    command: >
      sh -c "python manage.py makemigrations && 
      python manage.py migrate && 
      python manage.py initadmin &&
      gunicorn -b 0.0.0.0:8000 app.wsgi:application" 


  nginx:
    container_name: nginx
    working_dir: /app
    image: nginx:stable-alpine
    restart: always
    build:
      dockerfile: ./Dockerfile
      context: ./.docker/nginx/
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - ./docker/nginx/prod/:/etc/nginx/conf.d:ro
      - ./docker/certbot/conf:/etc/letsencrypt:ro
      - ./docker/certbot/www:/var/www/certbot:ro
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
        - ./docker/certbot/conf:/etc/letsencrypt:rw
        - ./docker/certbot/www:/var/www/certbot:rw
    command: certonly --webroot --webroot-path=/var/www/certbot/ --email Alexej.selin2011@yandex.ru --agree-tos --no-eff-email -d 89.111.170.193 -d 89.111.170.193
    depends_on:
      - nginx


volumes:
  static_volume:
  media_volume:
  postgres_storage: